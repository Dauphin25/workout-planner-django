# Generated by Django 5.2.6 on 2025-09-30 22:15

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('exercises', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the fitness goal', max_length=100, unique=True, verbose_name='Goal Name')),
                ('description', models.TextField(blank=True, help_text='Description of the goal', verbose_name='Goal Description')),
                ('goal_type', models.CharField(choices=[('weight_loss', 'Weight Loss'), ('muscle_gain', 'Muscle Gain'), ('endurance', 'Endurance'), ('flexibility', 'Flexibility'), ('general_health', 'General Health'), ('other', 'Other')], default='other', help_text='Type/category of the goal', max_length=30, verbose_name='Goal Type')),
                ('recommended_duration_weeks', models.PositiveIntegerField(blank=True, help_text='Suggested duration to achieve this goal', null=True, verbose_name='Recommended Duration (weeks)')),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('abandoned', 'Abandoned')], default='active', help_text='Current status of the goal', max_length=20, verbose_name='Goal Status')),
                ('feedback', models.TextField(blank=True, help_text='User feedback or notes about the goal', verbose_name='Goal Feedback')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Goal',
                'verbose_name_plural': 'Goals',
            },
        ),
        migrations.CreateModel(
            name='WorkoutDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], max_length=20, verbose_name='Day of Week')),
                ('order', models.PositiveIntegerField(help_text='The order of the day in the plan (e.g., Day 1, Day 2)', verbose_name='Order')),
                ('focus_area', models.CharField(choices=[('upper_body', 'Upper Body'), ('lower_body', 'Lower Body'), ('cardio', 'Cardio'), ('core', 'Core'), ('full_body', 'Full Body'), ('rest', 'Rest'), ('other', 'Other')], default='other', help_text='Main focus of this workout day', max_length=20, verbose_name='Focus Area')),
                ('notes', models.TextField(blank=True, help_text='Additional notes for this day', verbose_name='Notes')),
                ('is_rest_day', models.BooleanField(default=False, help_text='Is this a rest day?', verbose_name='Is Rest Day')),
                ('session_rating', models.DecimalField(blank=True, decimal_places=2, help_text='User rating for this workout day', max_digits=3, null=True, verbose_name='Session Rating')),
                ('calories_burned', models.PositiveIntegerField(blank=True, help_text='Estimated calories burned in this session', null=True, verbose_name='Calories Burned')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Workout Day',
                'verbose_name_plural': 'Workout Days',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='WorkoutExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sets', models.PositiveIntegerField(default=3, help_text='Number of sets', verbose_name='Sets')),
                ('repetitions', models.PositiveIntegerField(blank=True, help_text='Reps per set if applicable', null=True, verbose_name='Repetitions')),
                ('duration_seconds', models.PositiveIntegerField(blank=True, help_text='Duration in seconds for time-based exercises', null=True, verbose_name='Duration (seconds)')),
                ('distance_meters', models.PositiveIntegerField(blank=True, help_text='Distance in meters for cardio exercises', null=True, verbose_name='Distance (meters)')),
                ('rest_seconds', models.PositiveIntegerField(default=60, help_text='Rest between sets in seconds', verbose_name='Rest (seconds)')),
                ('notes', models.TextField(blank=True, help_text='User notes or modifications', verbose_name='Notes')),
                ('order', models.PositiveIntegerField(default=1, help_text='The order of this exercise in the workout day', verbose_name='Order')),
                ('intensity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', help_text='Intensity level for this exercise', max_length=10, verbose_name='Intensity')),
                ('tempo', models.CharField(blank=True, help_text='Tempo for the exercise (e.g., 2-1-2)', max_length=20, verbose_name='Tempo')),
                ('completed', models.BooleanField(default=False, help_text='Has the user completed this exercise?', verbose_name='Completed')),
                ('feedback', models.TextField(blank=True, help_text='User feedback or rating for this exercise', verbose_name='Feedback')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workout_entries', to='exercises.exercise', verbose_name='Exercise')),
                ('workout_day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercises', to='workout_plan.workoutday', verbose_name='Workout Day')),
            ],
            options={
                'verbose_name': 'Workout Exercise',
                'verbose_name_plural': 'Workout Exercises',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='WorkoutPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Name of the workout plan (e.g., Summer Shred, Strength Gain)', max_length=255, verbose_name='Plan Title')),
                ('description', models.TextField(blank=True, help_text='Optional description of the workout plan', verbose_name='Plan Description')),
                ('frequency_per_week', models.PositiveIntegerField(default=3, help_text='How many times per week the user trains', verbose_name='Sessions per Week')),
                ('daily_session_duration', models.PositiveIntegerField(help_text='Approximate daily session duration in minutes', verbose_name='Daily Session Duration (min)')),
                ('difficulty', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='beginner', help_text='Difficulty level of the plan', max_length=20, verbose_name='Difficulty')),
                ('start_date', models.DateField(blank=True, help_text='When the plan starts', null=True, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, help_text='When the plan ends', null=True, verbose_name='End Date')),
                ('progress', models.DecimalField(decimal_places=2, default=0.0, help_text='Completion percentage of the plan', max_digits=5, verbose_name='Progress (%)')),
                ('is_active', models.BooleanField(default=True, help_text='Is this plan currently active?', verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('goal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='plans', to='workout_plan.goal', verbose_name='Goal')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workout_plans', to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'verbose_name': 'Workout Plan',
                'verbose_name_plural': 'Workout Plans',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='workoutday',
            name='workout_plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='days', to='workout_plan.workoutplan', verbose_name='Workout Plan'),
        ),
        migrations.AlterUniqueTogether(
            name='workoutday',
            unique_together={('workout_plan', 'day_of_week')},
        ),
    ]
